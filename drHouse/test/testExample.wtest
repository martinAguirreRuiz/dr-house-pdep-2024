import src.personas.Persona.*
import src.enfermedades.EnfermedadAutoinmune.*
import src.enfermedades.EnfermedadInfecciosa.*

describe "Dr House - Temporada 1" {
  
  const malaria500 = new EnfermedadInfecciosa(celulasAmenazadas = 500)
  const otitis100 = new EnfermedadInfecciosa(celulasAmenazadas = 100)
  const lupus10000 = new EnfermedadAutoInmune(celulasAmenazadas = 10000)
  const malaria800 = new EnfermedadInfecciosa(celulasAmenazadas = 800)

  const logan = new Persona(temperatura = 36, celulas = 3000000)
  const frank = new Persona(temperatura = 36, celulas = 3500000)

  method initialize() {
    logan.contraerEnfermedad(malaria500)
    logan.contraerEnfermedad(otitis100)
    logan.contraerEnfermedad(lupus10000)
  }

  test "1. Frank contrae malaria de 800 celulas amenazadas y se agrega a sus enfermedades" {
    frank.contraerEnfermedad(malaria800)
    assert.that(frank.tiene(malaria800))
  }

  test "2. Malaria contraida por logan se reproduce" {
    malaria500.reproducirse()    
    assert.equals(1000, malaria500.celulasAmenazadas())
  }

  test "3.a. Logan vive un día para ver cantidad de células afectadadas por enfermedades agresivas" {
    logan.vivir(1)
    assert.equals(0, logan.cantidadCelulasAfectadasPorEnfermedadesAgresivas())
  }

  test "3.b. Logan vive un día para ver la enfermedad que más células le afecta" {
    logan.vivir(1)
    assert.equals(lupus10000, logan.enfermedadQueMasCelulasAfecta())
  }

  test "3.c. Logan vive un día para ver si está en coma" {
    logan.vivir(1)
    assert.that(!logan.estarEnComa())
  }

  test "4.a Logan vive 31 días estando enfermo y aumenta la cantidad total de celulas afectadas por enfermedades agresivas" {
    logan.vivir(31)
    assert.equals(10000, logan.cantidadCelulasAfectadasPorEnfermedadesAgresivas())
  }

  test "4.b Logan vive 31 días estando enfermo y la enfermedad de logan que más celulas afecta es el lupus" {
    logan.vivir(31)
    assert.equals(lupus10000, logan.enfermedadQueMasCelulasAfecta())
  }

  test "4.c Logan vive 31 días estando enfermo y logan no está en coma" {
    logan.vivir(31)
    assert.that(logan.estarEnComa())
  }
}



